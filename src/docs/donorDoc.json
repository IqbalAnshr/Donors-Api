{
    "openapi": "3.0.0",
    "info": {
      "title": "Donors API",
      "version": "1.0.0",
      "description": "API Documentation for Donors",
      "contact": {
        "name": "Iqbal Anshori",
        "email": "iqbalanshr@gmail.com"

      }
    },
    "servers": [
      {
        "url": "http://localhost:3000"
      },
      {
        "url": "https://{environment}.donors-api.herokuapp.com",
        "variables": {
          "environment": {
            "default": "development",
            "description": "The API environment",
            "enum": [
              "development",
              "production",
              "test"
            ]
          }
        }
      }
    ],
    "components": {
      "securitySchemes": {
        "bearerAuth": {
          "type": "http",
          "scheme": "bearer",
          "bearerFormat": "JWT"
        }
      }
    },
    "tags": [
      {
        "name": "Auth",
        "description": "Authentication related endpoints"
      }
    ],
    "paths": {
      "/api/auth/signup": {
        "post": {
          "summary": "Register a new user",
          "tags": ["Auth"],
          "requestBody": {
            "required": true,
            "content": {
              "application/x-www-form-urlencoded": {
                "schema": {
                  "type": "object",
                  "required": ["username", "name", "email", "password", "phoneNumber"],
                  "properties": {
                    "username": {
                      "type": "string",
                      "description": "Username of the user",
                      "example": "Johndoe"
                    },
                    "name": {
                      "type": "string",
                      "description": "Name of the user",
                      "example": "John Doe"
                    },
                    "email": {
                      "type": "string",
                      "format": "email",
                      "description": "Email of the user",
                      "example": "johndoe@example.com"
                    },
                    "password": {
                      "type": "string",
                      "format": "password",
                      "description": "Password of the user",
                      "example": "Password123"
                    },
                    "phoneNumber": {
                      "type": "string",
                      "description": "Phone number of the user",
                      "example": "6287318738131"
                    }
                  }
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "User registered successfully",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "auth": {
                        "type": "boolean",
                        "example": true
                      },
                      "id": {
                        "type": "integer",
                        "example": 1
                      },
                      "accessToken": {
                        "type": "string"
                      },
                      "refreshToken": {
                        "type": "string"
                      },
                      "message": {
                        "type": "string",
                        "example": "User registered successfully!"
                      },
                      "errors": {
                        "type": "array",
                        "example": []
                      }
                    }
                  }
                }
              }
            },
            "400": {
              "description": "Validation error",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "auth": {
                        "type": "boolean",
                        "example": false
                      },
                      "message": {
                        "type": "string",
                        "example": "Error Validation"
                      },
                      "errors": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "field"
                            },
                            "value": {
                              "type": "string",
                              "example": "you"
                            },
                            "msg": {
                              "type": "string",
                              "example": "Username must be at least 5 characters long"
                            },
                            "path": {
                              "type": "string",
                              "example": "username"
                            },
                            "location": {
                              "type": "string",
                              "example": "body"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "409": {
              "description": "Conflict error",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "error"
                      },
                      "message": {
                        "type": "string",
                        "example": "Email is already taken!"
                      },
                      "errors": {
                        "type": "array",
                        "example": []
                      }
                    }
                  }
                }
              }
            },
            "500": {
              "description": "Internal server error",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "error"
                      },
                      "message": {
                        "type": "string",
                        "example": "Internal server error"
                      },
                      "errors": {
                        "type": "array",
                        "example": ["Internal server error message"]
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/api/auth/signin": {
        "post": {
          "summary": "Sign in a user",
          "tags": ["Auth"],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "email": {
                      "type": "string",
                      "description": "Email of the user",
                      "example": "johndoe@example.com"
                    },
                    "password": {
                      "type": "string",
                      "description": "Password of the user",
                      "example": "Password123"
                    }
                  }
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "User signed in successfully",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "auth": {
                        "type": "boolean",
                        "example": true
                      },
                      "message": {
                        "type": "string",
                        "example": "Successfully Logged In"
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "example": 1
                          },
                          "accessToken": {
                            "type": "string",
                            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                          },
                          "refreshToken": {
                            "type": "string",
                            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "400": {
              "description": "Validation error",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "auth": {
                        "type": "boolean",
                        "example": false
                      },
                      "message": {
                        "type": "string",
                        "example": "Error Validation"
                      },
                      "errors": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "msg": {
                              "type": "string",
                              "example": "Email is invalid"
                            },
                            "param": {
                              "type": "string",
                              "example": "email"
                            },
                            "location": {
                              "type": "string",
                              "example": "body"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "500": {
              "description": "Error while logging in",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "auth": {
                        "type": "boolean",
                        "example": false
                      },
                      "message": {
                        "type": "string",
                        "example": "Error While Logging In"
                      },
                      "errors": {
                        "type": "array",
                        "items": {
                          "type": "string",
                          "example": "Internal Server Error"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/api/auth/signout": {
        "post": {
          "summary": "Sign out a user",
          "tags": ["Auth"],
          "security": [
            {
              "bearerAuth": []
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "token": {
                      "type": "string",
                      "description": "Refresh token of the user",
                      "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                    }
                  }
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "User signed out successfully",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "auth": {
                        "type": "boolean",
                        "example": false
                      },
                      "message": {
                        "type": "string",
                        "example": "Successfully Logged Out"
                      }
                    }
                  }
                }
              }
            },
            "500": {
              "description": "Error while logging out",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "auth": {
                        "type": "boolean",
                        "example": false
                      },
                      "message": {
                        "type": "string",
                        "example": "Error While Logging Out"
                      },
                      "errors": {
                        "type": "array",
                        "items": {
                          "type": "string",
                          "example": "Internal Server Error"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/api/auth/refresh-token": {
        "post": {
          "summary": "Refresh the access token",
          "tags": ["Auth"],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "token": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Token refreshed successfully"
            },
            "400": {
              "description": "Bad request"
            }
          }
        }
      }
    }
  }
  